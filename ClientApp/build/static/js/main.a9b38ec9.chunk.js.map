{"version":3,"sources":["components/_common/Navbar.tsx","pages/_common/home.js","pages/_common/about.js","pages/_common/contact.js","pages/_common/faq.js","pages/POS/P0001.js","pages/Manager/M0002.js","pages/Manager/M0003.js","pages/Manager/M0004.js","pages/Manager/M0005.js","components/PageBreadcrumbs/PageBreadcrumbs.tsx","pages/Manager/M0001.tsx","services/AuthService.tsx","pages/Login/Login.tsx","contexts/UserContext.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["styles","navlinks","marginLeft","display","logo","flexGrow","cursor","textDecoration","color","link","width","Navbar","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useState","openSidebar","setOpenSidebar","openMenuNested","setOpenMenuNested","useEffect","console","log","CssBaseline","AppBar","position","sx","zIndex","drawer","Toolbar","IconButton","onClick","style","to","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","open","Box","overflow","menuList","List","filter","item","MenuLink","parentMenuNo","map","index","ListItemButton","menuNo","tmp","concat","findIndex","x","splice","push","NestedMenuClick","MenuNo","ListItemIcon","ListItemText","primary","MenuNa","some","Collapse","in","CheckMenuCollapse","timeout","unmountOnExit","disablePadding","subItem","ListItem","pl","Divider","GetMenu","About","Contact","Faq","P0001","M0002","M0003","M0004","M0005","handleClick","event","preventDefault","info","PageBreadcrumbs","location","role","Breadcrumbs","Link","underline","href","M0001","login","username","password","fetch","method","headers","body","JSON","stringify","UserNo","UserPwd","response","json","data","isAuthenticated","user","localStorage","getItem","parse","Copyright","props","align","Date","getFullYear","createTheme","Login","LoginMsg","setLoginMsg","handleSubmit","FormData","currentTarget","values","account","get","res","ResponseNo","resData","ResponseData","Token","UserNa","setItem","ResponseNa","ThemeProvider","Grid","container","height","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","flexDirection","alignItems","Avatar","m","bgcolor","noValidate","onSubmit","mt","TextField","error","margin","required","fullWidth","id","label","name","autoFocus","type","autoComplete","helperText","FormControlLabel","control","Checkbox","value","Button","mb","UserContext","createContext","UserProvider","children","currentUser","setCurrentUser","checkLoggedIn","a","cuser","undefined","removeItem","Provider","ex","App","p","path","element","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","createBrowserHistory","basename","ReactDOM","getElementById","URL","process","toString","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a9b38ec9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Collapse from \"@mui/material/Collapse\";\n\nimport Divider from \"@mui/material/Divider\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\n\nimport Box from \"@mui/material/Box\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"../types/_common/Menu/Menu\";\nimport React from \"react\";\r\n\nconst styles = {\n  navlinks: {\n    marginLeft: 5,\n    display: \"flex\",\n  },\n  logo: {\n    flexGrow: 1,\n    cursor: \"pointer\",\n    textDecoration: \"none\",\n    color: \"#FFFFFF\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#000000\",\n    width: \"100%\",\n  },\n};\n\nfunction Navbar() {\n  //console.log(process.env);\n  const menuList: Array<Menu> = [\n    { MenuNo: \"Home\", MenuNa: \"個人首頁\", MenuLink: \"/\", parentMenuNo: \"\" },\n    {\n      MenuNo: \"Contact\",\n      MenuNa: \"聯絡我們\",\n      MenuLink: \"/Contact\",\n      parentMenuNo: \"\",\n    },\n    { MenuNo: \"Faq\", MenuNa: \"常見問題\", MenuLink: \"/Faq\", parentMenuNo: \"\" },\n    {\n      MenuNo: \"About\",\n      MenuNa: \"關於我們\",\n      MenuLink: \"/About\",\n      parentMenuNo: \"\",\n    },\n    {\n      MenuNo: \"POS\",\n      MenuNa: \"前台功能管理\",\n      MenuLink: \"\",\n      parentMenuNo: \"\",\n    },\n    {\n      MenuNo: \"P0001\",\n      MenuNa: \"系統參數設定\",\n      MenuLink: \"/POS/P0001\",\n      parentMenuNo: \"POS\",\n    },\n    {\n      MenuNo: \"Manager\",\n      MenuNa: \"後台功能管理\",\n      MenuLink: \"\",\n      parentMenuNo: \"\",\n    },\n    {\n      MenuNo: \"M0001\",\n      MenuNa: \"系統參數設定\",\n      MenuLink: \"/Manager/M0001\",\n      parentMenuNo: \"Manager\",\n    },\n    {\n      MenuNo: \"M0002\",\n      MenuNa: \"客製參數設定\",\n      MenuLink: \"/Manager/M0002\",\n      parentMenuNo: \"Manager\",\n    },\n    {\n      MenuNo: \"M0003\",\n      MenuNa: \"收銀功能設定\",\n      MenuLink: \"/Manager/M0003\",\n      parentMenuNo: \"Manager\",\n    },\n    {\n      MenuNo: \"M0004\",\n      MenuNa: \"外部系統設定\",\n      MenuLink: \"/Manager/M0004\",\n      parentMenuNo: \"Manager\",\n    },\n  ];\n\n  const drawerWidth = 240;\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  //sidebar開關控制，\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const [openMenuNested, setOpenMenuNested] = useState<Array<string>>([]);\n\n  //State監測\n  useEffect(() => {\n    console.log(\"openMenuNested=\");\n    console.log(openMenuNested);\n  });\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n      >\n        <Toolbar>\n          {isMobile ? (\n            <IconButton\n              onClick={() => setOpenSidebar(!openSidebar)}\n              style={{ color: \"white\" }}\n            >\n              <MenuIcon />\n            </IconButton>\n          ) : (\n            \"\"\n                  )\n                  }\n          <Link to=\"/\" style={styles.logo}>\n            <Typography variant=\"h5\" noWrap component=\"div\">\n              CMS\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        //移動裝置時Sidebar改為懸浮顯示，非移動裝置時固定於左側\n        variant={isMobile ? \"temporary\" : \"permanent\"}\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        open={openSidebar}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\" }}>\n          {GetMenu(menuList)}\n          {/* <List>\n            {[\"Contact\", \"Faq\"].map((text, index) => (\n              <ListItem key={text} disablePadding>\n                <Link to={text} style={styles.link}>\n                  <ListItemButton\n                    onClick={() => {\n                      setOpenSidebar(false);\n                    }}\n                  >\n                    <ListItemIcon>\n                      {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItemButton>\n                </Link>\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {[\"About\"].map((text, index) => (\n              <ListItem key={text} disablePadding>\n                <Link to={text} style={styles.link}>\n                  <ListItemButton\n                    onClick={() => {\n                      setOpenSidebar(false);\n                    }}\n                  >\n                    <ListItemIcon>\n                      {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItemButton>\n                </Link>\n              </ListItem>\n            ))}\n          </List> */}\n        </Box>\n      </Drawer>\n    </>\n  );\n\n  // #region private function\n\n  //NestedMenu縮合控制\n  function NestedMenuClick(menuNo: string) {\n    let tmp = openMenuNested.concat();\n    let index = openMenuNested.findIndex((x) => {\n      return x === menuNo;\n    });\n    if (index !== -1) {\n      tmp.splice(index);\n    } else {\n      tmp.push(menuNo);\n    }\n    setOpenMenuNested(tmp);\n  }\n  //確認NestedMenu Collapse狀態\n  function CheckMenuCollapse(menuNo: string) {\n    let ret = openMenuNested.some((x) => {\n      return x === menuNo;\n    });\n    return ret;\n  }\n  //取得Menu\n  function GetMenu(menuList: Array<Menu>): JSX.Element {\n    return (\n      <>\n      <List>\n        {\n          //Nested Menu Area(兩層)\n          menuList\n            .filter((item) => {\n              return item.MenuLink === \"\" && item.parentMenuNo === \"\";\n            })\n            .map((item, index) => (\n              <>\n                <ListItemButton\n                  onClick={() => {\n                    NestedMenuClick(item.MenuNo);\n                  }}\n                >\n                  <ListItemIcon>\n                    <InboxIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={item.MenuNa} />\n                  {openMenuNested.some((x) => {\n                    return x === item.MenuNo;\n                  }) ? (\n                    <ExpandLess />\n                  ) : (\n                    <ExpandMore />\n                  )}\n                </ListItemButton>\n                <Collapse\n                  in={CheckMenuCollapse(item.MenuNo)}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <List component=\"div\" disablePadding>\n                    {menuList\n                      .filter((x) => {\n                        return x.parentMenuNo === item.MenuNo;\n                      })\n                      .map((subItem) => (\n                        <ListItem key={subItem.MenuNo} disablePadding>\n                          <Link to={subItem.MenuLink} style={styles.link}>\n                            <ListItemButton\n                              sx={{ pl: 4 }}\n                              onClick={() => {\n                                setOpenSidebar(false);\n                              }}\n                            >\n                              <ListItemIcon>\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                              </ListItemIcon>\n                              <ListItemText primary={subItem.MenuNa} />\n                            </ListItemButton>\n                          </Link>\n                        </ListItem>\n                      ))}\n                  </List>\n                </Collapse>\n              </>\n            ))\n        }\n        </List>\n        <Divider />\n        <List>\n        {\n          //Basic Menu Area\n          menuList\n            .filter((item) => {\n              return item.MenuLink !== \"\" && item.parentMenuNo === \"\";\n            })\n            .map((item, index) => (\n              <>\n                {/* <ListItem key={item.MenuNo} disablePadding> */}\n                  <Link to={item.MenuLink} style={styles.link}>\n                    <ListItemButton\n                      onClick={() => {\n                        setOpenSidebar(false);\n                      }}\n                    >\n                      <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                      </ListItemIcon>\n                      <ListItemText primary={item.MenuNa} />\n                    </ListItemButton>\n                  </Link>\n                {/* </ListItem> */}\n              </>\n            ))\n        }\n        </List>\n      </>\n    );\n  }\n\n  // #endregion\n}\nexport default Navbar;\n","import Typography from '@mui/material/Typography'\n\nfunction About() {\n  return <Typography>This is the homepage</Typography>;\n}\nexport default About;","import Typography from '@mui/material/Typography';\n\nfunction About() {\n  return <Typography>About us page</Typography>;\n}\nexport default About;\n","import Typography from '@mui/material/Typography';\n\nfunction Contact() {\n  return <Typography>Contact Us page</Typography>;\n}\nexport default Contact;\n","import Typography from '@mui/material/Typography';\n\nfunction Faq() {\n  return <Typography>Faq page</Typography>;\n}\nexport default Faq;\n","import Typography from '@mui/material/Typography'\n\nfunction P0001() {\n  return <Typography>This is the P0001</Typography>;\n}\nexport default P0001;","import Typography from '@mui/material/Typography'\n\nfunction M0002() {\n  return <Typography>This is the M0002</Typography>;\n}\nexport default M0002;","import Typography from '@mui/material/Typography'\n\nfunction M0003() {\n  return <Typography>This is the M0003</Typography>;\n}\nexport default M0003;","import Typography from '@mui/material/Typography'\n\nfunction M0004() {\n  return <Typography>This is the M0004</Typography>;\n}\nexport default M0004;","import Typography from '@mui/material/Typography'\n\nfunction M0005() {\n  return <Typography>This is the M0005</Typography>;\n}\nexport default M0005;","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\n\r\nfunction handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    //取消預設事件\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function PageBreadcrumbs() {\r\n    console.log(location);\r\n    //let \r\n    return (\r\n        <div role=\"presentation\" onClick={handleClick}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link underline=\"hover\" color=\"inherit\" href=\"/\">\r\n                    MUI\r\n                </Link>\r\n                <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    href=\"/material-ui/getting-started/installation/\"\r\n                >\r\n                    Core\r\n                </Link>\r\n                <Typography color=\"text.primary\">Breadcrumbs</Typography>\r\n            </Breadcrumbs>\r\n        </div>\r\n    );\r\n}","import Box from \"@mui/material/Box\";\r\nimport React from \"react\";\r\nimport PageBreadcrumbs from \"../../components/PageBreadcrumbs/PageBreadcrumbs\";\r\n\r\n\r\nfunction M0001() {\r\n    return (\r\n        <>\r\n            {/* breadcrumbs */}\r\n            <Box>\r\n                <PageBreadcrumbs />\r\n            </Box>\r\n            {/* �d�߰� */}\r\n            <Box>\r\n\r\n            </Box>\r\n            {/* ��ư� */}\r\n            <Box>\r\n            </Box>\r\n         </>\r\n    );\r\n}\r\nexport default M0001;","import { BasicResponse } from \"../types/_common/basic/http\";\r\n\r\nexport const login = async (username: string, password: string) => {\r\n\r\n\tconst response = await fetch(`/Login`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tUserNo: username,\r\n\t\t\t\tUserPwd: password\r\n\t\t\t})\r\n\t\t}\r\n\t);\r\n\tconst data: BasicResponse = await response.json();\r\n\t//console.log(data);\r\n\t//if (data.ResponseNo=='0000') {\r\n\t//\tconst res: any = data.ResponseData;\r\n\t//\tconsole.log(res);\r\n\t//\tconst token = res.Token;\r\n\t//\tif (token) {\r\n\t//\t\tlocalStorage.setItem('user', JSON.stringify(token));\r\n\t//\t}\r\n\t//}\r\n\treturn data;\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n\tconst user = localStorage.getItem('user');\r\n\tif (!user) {\r\n\t\treturn {}\r\n\t}\r\n\treturn JSON.parse(user);\r\n};\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { login } from '../../services/AuthService';\r\nimport { BasicResponse } from '../../types/_common/basic/http';\r\nimport { useState } from 'react';\r\nimport { User } from '../../types/_common/login/login';\r\n\r\nfunction Copyright(props: any) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n\r\n    const [LoginMsg, setLoginMsg] = useState<string>('');\r\n\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        let values: any = {\r\n            account: data.get('account'),\r\n            password: data.get('password'),\r\n        };\r\n\r\n        let res: BasicResponse = await login(values.account, values.password);\r\n        console.log(res);\r\n        if (res.ResponseNo == '0000') {\r\n            const resData: any = res.ResponseData;\r\n            if (resData.Token) {\r\n                let user: User = { UserNo: resData.UserNo, UserNa: resData.UserNa, Token: resData.Token };\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }\r\n            else {\r\n                setLoginMsg(\"登入出現異常，請休息一會再嘗試。\");\r\n            }\r\n        } else {\r\n            setLoginMsg(res.ResponseNa);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    sx={{\r\n                        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: (t) =>\r\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                            <TextField\r\n                                error={LoginMsg !== ''}\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"account\"\r\n                                label=\"Account\"\r\n                                name=\"account\"\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                error={LoginMsg !== ''}\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                helperText={LoginMsg !== '' ? LoginMsg:\"\"}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        Forgot password?\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Copyright sx={{ mt: 5 }} />\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}","import React, { useState, useEffect, createContext } from 'react';\r\nimport { isAuthenticated } from '../services/AuthService';\r\n\r\nimport Login from '../pages/Login/Login';\r\nimport { User } from '../types/_common/login/login';\r\nimport { Props } from '../types/_common/props';\r\n\r\nconst UserContext = createContext({});\r\n\r\nexport const UserProvider = ({ children }: Props) => {\r\n\ttry {\r\n\t\tconst [currentUser, setCurrentUser] = useState<User | null>(null);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst checkLoggedIn = async () => {\r\n\t\t\t\tlet cuser:User | null = isAuthenticated();\r\n\t\t\t\tconsole.log('cuser', cuser);\r\n\t\t\t\tconsole.log(cuser.Token);\r\n\t\t\t\tif (cuser === null || cuser.Token === undefined) {\r\n\t\t\t\t\tconsole.log('empty!');\r\n\t\t\t\t\tlocalStorage.removeItem('user');\r\n\t\t\t\t\tcuser = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCurrentUser(cuser);\r\n\t\t\t};\r\n\r\n\t\t\tcheckLoggedIn();\r\n\t\t}, []);\r\n\r\n\t\tconsole.log('usercontext', currentUser);\r\n\r\n\t\treturn (\r\n\t\t\t<UserContext.Provider value={[currentUser, setCurrentUser]}>\r\n\t\t\t\t{currentUser ? children : <Login />}\r\n\t\t\t</UserContext.Provider>\r\n\t\t);\r\n\t} catch (ex) {\r\n\t\tconsole.error(ex);\r\n\t}\r\n};\r\n\r\n\r\nexport default UserContext;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Routes } from \"react-router-dom\";\nimport Navbar from \"./components/_common/Navbar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Box from \"@mui/material/Box\";\nimport Home from \"./pages/_common/home\";\nimport About from \"./pages/_common/about\";\nimport Contact from \"./pages/_common/contact\";\nimport Faq from \"./pages/_common/faq\";\nimport P0001 from \"./pages/POS/P0001\";\nimport M0002 from \"./pages/Manager/M0002\";\nimport M0003 from \"./pages/Manager/M0003\";\nimport M0004 from \"./pages/Manager/M0004\";\nimport M0005 from \"./pages/Manager/M0005\";\nimport M0001 from \"./pages/Manager/M0001\";\r\nimport { UserProvider } from \"./contexts/UserContext\";\r\nimport Login from \"./pages/Login/Login\";\r\n\r\n\r\nfunction App() {\n    return (\n\n        <Router>\n            <UserProvider>\n                <Box sx={{ display: \"flex\" }}>\n                    <Navbar />\n                    <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n                        <Toolbar />\n                        <Routes>\n                            {/* 基本功能 */}\n                            <Route path=\"/\" element={<Home />} />\n                            <Route path=\"/Login\" element={<Login />} />\n                            <Route path=\"/about\" element={<About />} />\n                            <Route path=\"/contact\" element={<Contact />} />\n                            <Route path=\"/faq\" element={<Faq />} />\n                            {/* 前台管理模組 */}\n                            <Route path=\"/POS/P0001\" element={<P0001 />} />\n                            {/* 後台管理模組 */}\n                            <Route path=\"/Manager/M0001\" element={<M0001 />} />\n                            <Route path=\"/Manager/M0002\" element={<M0002 />} />\n                            <Route path=\"/Manager/M0003\" element={<M0003 />} />\n                            <Route path=\"/Manager/M0004\" element={<M0004 />} />\n                            <Route path=\"/Manager/M0005\" element={<M0005 />} />\n                        </Routes>\n                    </Box>\n                </Box>\n                {/* <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/faq\" component={Faq} />\n      </Switch> */}\n            </UserProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n//import { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\n//const store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    //<Provider store={store}>\r\n    //<ConnectedRouter history={history}>\r\n        <App />\r\n    //</ConnectedRouter>\r\n    //</Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}